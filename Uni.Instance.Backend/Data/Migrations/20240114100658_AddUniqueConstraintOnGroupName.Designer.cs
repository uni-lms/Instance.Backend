// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uni.Instance.Backend.Data;

#nullable disable

namespace Uni.Instance.Backend.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240114100658_AddUniqueConstraintOnGroupName")]
    partial class AddUniqueConstraintOnGroupName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseGroup", b =>
                {
                    b.Property<Guid>("AssignedGroupsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoursesId")
                        .HasColumnType("uuid");

                    b.HasKey("AssignedGroupsId", "CoursesId");

                    b.HasIndex("CoursesId");

                    b.ToTable("CourseGroup");
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.CourseSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.ToTable("CourseSections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a19c6184-46c3-40fa-bef7-32ab966a4946"),
                            Name = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("965d07a0-8666-49a9-af0e-797944c65f5f"),
                            Name = "Лабораторные работы"
                        },
                        new
                        {
                            Id = new Guid("adb191be-1e90-46e2-9886-1bfe911a0d66"),
                            Name = "Самостоятельная работа студентов"
                        },
                        new
                        {
                            Id = new Guid("d2604c2a-550a-4f7e-8da8-1864e6337377"),
                            Name = "Экзамен"
                        },
                        new
                        {
                            Id = new Guid("d10a8149-afb3-416b-8bfe-3dbbedbec517"),
                            Name = "Курсовой проект"
                        },
                        new
                        {
                            Id = new Guid("fa013e01-8a58-4ba5-b426-72b790c3ba4f"),
                            Name = "Курсовая работа"
                        },
                        new
                        {
                            Id = new Guid("33fe1815-0e3b-4991-8add-c163a2286711"),
                            Name = "Зачёт"
                        });
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EnteringYear")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearsOfStudy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a6bcced-f1d3-4155-b691-480718ee78e4"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c82073b9-126c-4b4e-8edc-bc3d0cea56f1"),
                            Name = "Tutor"
                        },
                        new
                        {
                            Id = new Guid("c0aa6455-626c-49de-94fc-616b4a6b5605"),
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("Email");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseGroup", b =>
                {
                    b.HasOne("Uni.Instance.Backend.Data.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("AssignedGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni.Instance.Backend.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.User", b =>
                {
                    b.HasOne("Uni.Instance.Backend.Data.Models.Course", null)
                        .WithMany("Owners")
                        .HasForeignKey("CourseId");

                    b.HasOne("Uni.Instance.Backend.Data.Models.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("Uni.Instance.Backend.Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.Course", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Uni.Instance.Backend.Data.Models.Group", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
